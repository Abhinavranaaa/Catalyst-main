"""
Django settings for catalyst project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from celery.schedules import crontab
import os
from dotenv import load_dotenv
from datetime import timedelta
import os
import nltk

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
NLTK_DATA_PATH = os.path.join(BASE_DIR, 'nltk_data')

nltk.data.path.append(NLTK_DATA_PATH)

BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-dj%m-9=0b118+=&&_-c^dg1fd)n=h8_#a+&o5m3%7err!qg*%-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = [
    'django-web-109334363006.us-central1.run.app',
    'localhost',
    '127.0.0.1',
    'catalyst-38ab.onrender.com',
    'django-web-109334363006.asia-south2.run.app',
    'catalyst-main-109334363006.asia-south2.run.app'
]

STATIC_URL = '/static/'


STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'




INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users.apps.UsersConfig',
    'rest_framework',
    'corsheaders',
    'roadmap',
    'question',
    'practice',
    'dashboard',
    'notifications'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware'
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
}

ROOT_URLCONF = 'catalyst.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'catalyst.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "postgres",
        "USER": "postgres.ahadzhvmsfefuuyuhixv",
        "PASSWORD": "1jU7TKr602okVSSa",
        "PORT": "6543",
        "HOST": "aws-0-ap-south-1.pooler.supabase.com",
        'OPTIONS': {
            'options': '-c statement_timeout=10000',
            'connect_timeout': 10,
        },
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = "users.User"
#
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:4200",
#     "https://catalyst-roadmap.vercel.app",
# ]

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

CSRF_COOKIE_SAMESITE = 'None'
SESSION_COOKIE_SAMESITE = 'None'

CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

CELERY_BROKER_URL = 'rediss://:ARgjAAIjcDEzYzUxODMxN2NlMDA0ZTBmYjQ5Y2RkNWU0Mzg5MzM3MnAxMA@dashing-monkfish-6179.upstash.io:6379/0'  
CELERY_RESULT_BACKEND = 'django-db'
INSTALLED_APPS += ['django_celery_results']
INSTALLED_APPS += ['django_celery_beat']

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtpout.secureserver.net'
EMAIL_PORT = 465
EMAIL_USE_SSL = True
EMAIL_USE_TLS = False

EMAIL_HOST_USER = 'admin@catalystedutech.com'
EMAIL_HOST_PASSWORD = 'Catalyst@28092025'

# Default "from" email address for outgoing emails
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# Your sending email constant (used in your send method)
CATALYST_EMAIL = DEFAULT_FROM_EMAIL


CELERY_BEAT_SCHEDULE = {
    'send_daily_notifications': {
        'task': 'notifications.tasks.send_daily_notifications',
        'schedule': timedelta(hours=12),  
    },
}

if os.getenv("RENDER") != "true":
    load_dotenv(os.path.join(BASE_DIR, '.env'), override=True)

VAPID_PUBLIC_KEY = os.getenv('VAPID_PUBLIC_KEY')
VAPID_PRIVATE_KEY = os.getenv('VAPID_PRIVATE_KEY')
if not VAPID_PUBLIC_KEY or not VAPID_PRIVATE_KEY:
    raise Exception("VAPID keys are missing. Please set them in your .env file.")


